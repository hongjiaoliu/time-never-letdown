import{_ as a,V as e,W as s,Z as d}from"./framework-bcbeea85.js";const n={},i=d(`<h1 id="基本-mkdir" tabindex="-1"><a class="header-anchor" href="#基本-mkdir" aria-hidden="true">#</a> 基本 | mkdir</h1><p><code>mkdir</code>（make directory的缩写）是一个用于创建新目录的命令，通常在命令行终端中使用。以下是从入门到高阶的<code>mkdir</code>命令详细讲解。</p><h2 id="入门" tabindex="-1"><a class="header-anchor" href="#入门" aria-hidden="true">#</a> 入门</h2><h3 id="_1-创建单个目录" tabindex="-1"><a class="header-anchor" href="#_1-创建单个目录" aria-hidden="true">#</a> 1. 创建单个目录</h3><p>要创建一个新的目录，只需在命令行中输入以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> 目录名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如，要创建一个名为<code>my_directory</code>的目录，可以执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> my_directory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-创建多个目录" tabindex="-1"><a class="header-anchor" href="#_2-创建多个目录" aria-hidden="true">#</a> 2. 创建多个目录</h3><p>你也可以同时创建多个目录，只需在命令中列出它们的名称：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> 目录1 目录2 目录3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> dir1 dir2 dir3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="进阶" tabindex="-1"><a class="header-anchor" href="#进阶" aria-hidden="true">#</a> 进阶</h2><h3 id="_3-创建嵌套目录" tabindex="-1"><a class="header-anchor" href="#_3-创建嵌套目录" aria-hidden="true">#</a> 3. 创建嵌套目录</h3><p>你可以创建嵌套的目录结构，通过在目录名称中添加路径分隔符（在Unix系统中为斜杠<code>/</code>，在Windows系统中为反斜杠\`\`）来指定层级关系：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> 目录1/子目录1/子子目录1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> parent/child/grandchild
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-创建多级目录" tabindex="-1"><a class="header-anchor" href="#_4-创建多级目录" aria-hidden="true">#</a> 4. 创建多级目录</h3><p>如果目录的父级目录尚不存在，你可以使用<code>-p</code>选项来创建多级目录，它会自动创建所需的父级目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> 父目录/子目录/子子目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> root/documents/projects
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="高阶" tabindex="-1"><a class="header-anchor" href="#高阶" aria-hidden="true">#</a> 高阶</h2><h3 id="_5-设置目录权限" tabindex="-1"><a class="header-anchor" href="#_5-设置目录权限" aria-hidden="true">#</a> 5. 设置目录权限</h3><p>你可以使用<code>chmod</code>命令来设置目录的权限，以决定谁可以读取、写入或执行该目录。例如，以下命令会将目录的所有者设置为具有读、写和执行权限，而其他用户只有读权限：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">755</span> 目录名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-使用绝对路径创建目录" tabindex="-1"><a class="header-anchor" href="#_6-使用绝对路径创建目录" aria-hidden="true">#</a> 6. 使用绝对路径创建目录</h3><p>你可以使用绝对路径来创建目录，这在需要在特定位置创建目录时很有用。绝对路径是从文件系统的根目录开始的完整路径。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /绝对路径/目录名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /home/user/documents
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_7-在创建目录时显示详细信息" tabindex="-1"><a class="header-anchor" href="#_7-在创建目录时显示详细信息" aria-hidden="true">#</a> 7. 在创建目录时显示详细信息</h3><p>通过使用<code>-v</code>选项，你可以在创建目录时显示详细信息，包括每个创建的目录名称：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-v</span> 目录1 目录2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-v</span> dir1 dir2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>通过<code>mkdir</code>命令，你可以轻松创建单个或多个目录，创建嵌套的目录结构，设置目录权限以及显示详细信息。无论是在入门阶段还是在高级用法中，<code>mkdir</code>都是一个非常有用的命令。</p><hr>`,41),r=[i];function c(l,h){return e(),s("div",null,r)}const t=a(n,[["render",c],["__file","mkdir.html.vue"]]);export{t as default};

const e=JSON.parse(`{"key":"v-11f21a8a","path":"/study/general/linux/commands/awk.html","title":"基本 | *awk","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2023-09-13T00:00:00.000Z","category":["通用技能"],"tag":["Linux","Linux命令"],"star":true,"description":"基本 | *awk 1. awk简介 awk是Linux系统中一种强大的文本处理工具,可以对文本和数据进行格式化处理。awk会将输入的文件或标准输入中的每一行都看作一个记录,然后按指定方式处理文本和数据。 2. awk基本用法 awk的基本语法格式如下: awk 'pattern { action }' file pattern表示awk在数据中查找的内容,pattern可以是正则表达式。 action是在找到匹配内容时所执行的一系列命令。 file表示要处理的文件。 示例:找出/etc/passwd文件中 UID 小于1000的用户 awk -F: '$3 &lt; 1000 {print $1}' /etc/passwd 这个命令中,-F指定了字段分隔符为冒号,:。$3表示第3个字段,也就是UID。$1表示用户名。所以这个命令的效果是打印出/etc/passwd文件中UID小于1000的用户名。","head":[["meta",{"property":"og:url","content":"https://liuhongjiao.cn/study/general/linux/commands/awk.html"}],["meta",{"property":"og:site_name","content":"L - 时光不负"}],["meta",{"property":"og:title","content":"基本 | *awk"}],["meta",{"property":"og:description","content":"基本 | *awk 1. awk简介 awk是Linux系统中一种强大的文本处理工具,可以对文本和数据进行格式化处理。awk会将输入的文件或标准输入中的每一行都看作一个记录,然后按指定方式处理文本和数据。 2. awk基本用法 awk的基本语法格式如下: awk 'pattern { action }' file pattern表示awk在数据中查找的内容,pattern可以是正则表达式。 action是在找到匹配内容时所执行的一系列命令。 file表示要处理的文件。 示例:找出/etc/passwd文件中 UID 小于1000的用户 awk -F: '$3 &lt; 1000 {print $1}' /etc/passwd 这个命令中,-F指定了字段分隔符为冒号,:。$3表示第3个字段,也就是UID。$1表示用户名。所以这个命令的效果是打印出/etc/passwd文件中UID小于1000的用户名。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"Linux命令"}],["meta",{"property":"article:published_time","content":"2023-09-13T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本 | *awk\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-13T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. awk简介","slug":"_1-awk简介","link":"#_1-awk简介","children":[]},{"level":2,"title":"2. awk基本用法","slug":"_2-awk基本用法","link":"#_2-awk基本用法","children":[]},{"level":2,"title":"3. awk内置变量","slug":"_3-awk内置变量","link":"#_3-awk内置变量","children":[]},{"level":2,"title":"4. awk条件过滤","slug":"_4-awk条件过滤","link":"#_4-awk条件过滤","children":[]},{"level":2,"title":"5. awk统计求和","slug":"_5-awk统计求和","link":"#_5-awk统计求和","children":[]},{"level":2,"title":"6. awk进阶","slug":"_6-awk进阶","link":"#_6-awk进阶","children":[]},{"level":2,"title":"7. awk统计分组","slug":"_7-awk统计分组","link":"#_7-awk统计分组","children":[]},{"level":2,"title":"8. awk格式化输出","slug":"_8-awk格式化输出","link":"#_8-awk格式化输出","children":[]},{"level":2,"title":"9. awk结合Shell","slug":"_9-awk结合shell","link":"#_9-awk结合shell","children":[]},{"level":2,"title":"10. awk进阶示例","slug":"_10-awk进阶示例","link":"#_10-awk进阶示例","children":[]},{"level":2,"title":"11. awk处理json、xml、csv数据","slug":"_11-awk处理json、xml、csv数据","link":"#_11-awk处理json、xml、csv数据","children":[{"level":3,"title":"处理JSON数据","slug":"处理json数据","link":"#处理json数据","children":[]},{"level":3,"title":"处理XML数据","slug":"处理xml数据","link":"#处理xml数据","children":[]},{"level":3,"title":"处理CSV数据","slug":"处理csv数据","link":"#处理csv数据","children":[]}]},{"level":2,"title":"12. awk结合正则表达式","slug":"_12-awk结合正则表达式","link":"#_12-awk结合正则表达式","children":[]},{"level":2,"title":"13. awk结合外部命令","slug":"_13-awk结合外部命令","link":"#_13-awk结合外部命令","children":[]},{"level":2,"title":"14. awk小技巧","slug":"_14-awk小技巧","link":"#_14-awk小技巧","children":[]},{"level":2,"title":"15. awk进阶应用","slug":"_15-awk进阶应用","link":"#_15-awk进阶应用","children":[{"level":3,"title":"系统监控","slug":"系统监控","link":"#系统监控","children":[]},{"level":3,"title":"网络监控","slug":"网络监控","link":"#网络监控","children":[]},{"level":3,"title":"系统管理","slug":"系统管理","link":"#系统管理","children":[]},{"level":3,"title":"日志分析","slug":"日志分析","link":"#日志分析","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.73,"words":1719},"filePathRelative":"study/general/linux/commands/awk.md","localizedDate":"2023年9月13日","excerpt":"<h1> 基本 | *awk</h1>\\n<h2> 1. awk简介</h2>\\n<p>awk是Linux系统中一种强大的文本处理工具,可以对文本和数据进行格式化处理。awk会将输入的文件或标准输入中的每一行都看作一个记录,然后按指定方式处理文本和数据。</p>\\n<h2> 2. awk基本用法</h2>\\n<p>awk的基本语法格式如下:\\nawk 'pattern { action }' file</p>\\n<ul>\\n<li>\\n<p>pattern表示awk在数据中查找的内容,pattern可以是正则表达式。</p>\\n</li>\\n<li>\\n<p>action是在找到匹配内容时所执行的一系列命令。</p>\\n</li>\\n<li>\\n<p>file表示要处理的文件。\\n示例:找出/etc/passwd文件中 UID 小于1000的用户</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">awk</span> -F: <span class=\\"token string\\">'$3 &lt; 1000 {print $1}'</span> /etc/passwd\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><p>这个命令中,-F指定了字段分隔符为冒号,:。$3表示第3个字段,也就是UID。$1表示用户名。所以这个命令的效果是打印出/etc/passwd文件中UID小于1000的用户名。</p>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};

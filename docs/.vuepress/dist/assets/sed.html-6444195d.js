import{_ as a,V as e,W as s,Z as n}from"./framework-bcbeea85.js";const d={},i=n(`<h1 id="基本-sed" tabindex="-1"><a class="header-anchor" href="#基本-sed" aria-hidden="true">#</a> 基本 | *sed</h1><p><code>sed</code> 是一个流文本编辑器，用于处理文本流并进行文本转换、替换等操作。以下是从入门到高级的<code>sed</code>命令详细讲解，包括一些常用的选项。</p><h2 id="入门" tabindex="-1"><a class="header-anchor" href="#入门" aria-hidden="true">#</a> 入门</h2><h3 id="_1-基本替换" tabindex="-1"><a class="header-anchor" href="#_1-基本替换" aria-hidden="true">#</a> 1. 基本替换</h3><p>要在文本中进行基本替换，只需在命令行中输入以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token string">&#39;s/原始文本/新文本/&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如，要将文件<code>file.txt</code>中的所有<code>apple</code>替换为<code>banana</code>，可以执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token string">&#39;s/apple/banana/&#39;</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="进阶" tabindex="-1"><a class="header-anchor" href="#进阶" aria-hidden="true">#</a> 进阶</h2><h3 id="_2-替换指定行" tabindex="-1"><a class="header-anchor" href="#_2-替换指定行" aria-hidden="true">#</a> 2. 替换指定行</h3><p>使用行号来指定替换操作仅对特定行生效：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token string">&#39;行号s/原始文本/新文本/&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如，要在文件<code>file.txt</code>的第3行替换<code>apple</code>为<code>banana</code>，可以执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token string">&#39;3s/apple/banana/&#39;</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-执行多个替换" tabindex="-1"><a class="header-anchor" href="#_3-执行多个替换" aria-hidden="true">#</a> 3. 执行多个替换</h3><p>可以通过添加多个替换规则来执行多个替换操作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/原始文本1/新文本1/&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/原始文本2/新文本2/&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如，要同时将文件<code>file.txt</code>中的<code>apple</code>替换为<code>banana</code>，将<code>orange</code>替换为<code>grape</code>，可以执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/apple/banana/&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/orange/grape/&#39;</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="高级" tabindex="-1"><a class="header-anchor" href="#高级" aria-hidden="true">#</a> 高级</h2><h3 id="_4-使用正则表达式" tabindex="-1"><a class="header-anchor" href="#_4-使用正则表达式" aria-hidden="true">#</a> 4. 使用正则表达式</h3><p><code>sed</code> 支持正则表达式替换。例如，要将文件<code>file.txt</code>中的所有数字替换为空字符串，可以执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token string">&#39;s/[0-9]//g&#39;</span> file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-插入和追加文本" tabindex="-1"><a class="header-anchor" href="#_5-插入和追加文本" aria-hidden="true">#</a> 5. 插入和追加文本</h3><p>使用 <code>i</code> 命令可以在特定行之前插入文本，使用 <code>a</code> 命令可以在特定行之后追加文本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token string">&#39;行号i 新文本&#39;</span> 文件名
<span class="token function">sed</span> <span class="token string">&#39;行号a 新文本&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-删除指定行" tabindex="-1"><a class="header-anchor" href="#_6-删除指定行" aria-hidden="true">#</a> 6. 删除指定行</h3><p>使用 <code>d</code> 命令可以删除特定行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token string">&#39;行号d&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_7-保存替换结果" tabindex="-1"><a class="header-anchor" href="#_7-保存替换结果" aria-hidden="true">#</a> 7. 保存替换结果</h3><p>默认情况下，<code>sed</code> 将输出结果打印到终端。如果要保存更改，可以使用 <code>-i</code> 选项：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/原始文本/新文本/&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_8-统计替换次数" tabindex="-1"><a class="header-anchor" href="#_8-统计替换次数" aria-hidden="true">#</a> 8. 统计替换次数</h3><p>使用 <code>-c</code> 参数，你可以统计替换的次数：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-c</span> <span class="token string">&#39;s/原始文本/新文本/&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_9-打印匹配行" tabindex="-1"><a class="header-anchor" href="#_9-打印匹配行" aria-hidden="true">#</a> 9. 打印匹配行</h3><p>使用 <code>-p</code> 参数，你可以打印匹配的行，这在与其他操作一起使用时非常有用：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-p</span> <span class="token string">&#39;s/原始文本/新文本/&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_10-静默模式" tabindex="-1"><a class="header-anchor" href="#_10-静默模式" aria-hidden="true">#</a> 10. 静默模式</h3><p>使用 <code>-n</code> 参数，可以关闭自动打印模式，只有经过特殊指令的行才会被打印出来：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">&#39;s/原始文本/新文本/p&#39;</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_11-使用脚本文件" tabindex="-1"><a class="header-anchor" href="#_11-使用脚本文件" aria-hidden="true">#</a> 11. 使用脚本文件</h3><p>使用 <code>-f</code> 参数，可以指定一个 <code>sed</code> 脚本文件来执行多个编辑操作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-f</span> 脚本文件 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>通过 <code>sed</code> 命令，你可以在文本中进行强大的替换、插入、追加和删除操作，还可以使用正则表达式进行高级操作。</p><hr>`,47),c=[i];function r(l,t){return e(),s("div",null,c)}const p=a(d,[["render",r],["__file","sed.html.vue"]]);export{p as default};

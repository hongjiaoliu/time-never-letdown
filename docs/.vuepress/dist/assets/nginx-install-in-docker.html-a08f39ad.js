import{_ as t,V as r,W as d,X as a,Y as n,Z as s,$ as i,F as l}from"./framework-9e98e3f0.js";const c={},o=i(`<h1 id="nginx-5-安装篇-docker" tabindex="-1"><a class="header-anchor" href="#nginx-5-安装篇-docker" aria-hidden="true">#</a> Nginx | 5-安装篇-Docker</h1><blockquote><p>这里介绍如何使用 docker 安装 nginx，首先我们先启动一个临时的 nginx，将它的配置拷贝到我们将要挂载的本机 nginx 配置目录中，之后再创建一个新的我们要用的 nginx 容器。</p></blockquote><h2 id="_1-创建要挂载的配置目录" tabindex="-1"><a class="header-anchor" href="#_1-创建要挂载的配置目录" aria-hidden="true">#</a> 1. 创建要挂载的配置目录</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mydata/nginx/conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-启动临时nginx容器" tabindex="-1"><a class="header-anchor" href="#_2-启动临时nginx容器" aria-hidden="true">#</a> 2. 启动临时nginx容器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-d</span> nginx:1.10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-拷贝出-nginx-容器的配置" tabindex="-1"><a class="header-anchor" href="#_3-拷贝出-nginx-容器的配置" aria-hidden="true">#</a> 3. 拷贝出 Nginx 容器的配置</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将nginx容器中的nginx目录复制到本机的/mydata/nginx/conf目录</span>
<span class="token function">docker</span> container <span class="token function">cp</span> nginx:/etc/nginx /mydata/nginx/conf

<span class="token comment"># 复制的是nginx目录，将该目录的所有文件移动到 &gt; 这里介绍如何使用 docker 安装 nginx，首先我们先启动一个临时的 nginx，将它的配置拷贝到我们将要挂载的本机 nginx 配置目录中，之后再创建一个新的我们要用的 nginx 容器。</span>

<span class="token comment">## 1. 创建要挂载的配置目录</span>
\`\`\`shell
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mydata/nginx/conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-启动临时nginx容器-1" tabindex="-1"><a class="header-anchor" href="#_2-启动临时nginx容器-1" aria-hidden="true">#</a> 2. 启动临时nginx容器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-d</span> nginx:1.10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-拷贝出-nginx-容器的配置-1" tabindex="-1"><a class="header-anchor" href="#_3-拷贝出-nginx-容器的配置-1" aria-hidden="true">#</a> 3. 拷贝出 Nginx 容器的配置</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将nginx容器中的nginx目录复制到本机的/mydata/nginx/conf目录</span>
<span class="token function">docker</span> container <span class="token function">cp</span> nginx:/etc/nginx /mydata/nginx/conf

<span class="token comment"># 复制的是nginx目录，将该目录的所有文件移动到 conf 目录</span>
<span class="token function">mv</span> /mydata/nginx/conf/nginx/* /mydata/nginx/conf/

<span class="token comment"># 删除多余的 /mydata/nginx/conf/nginx目录</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mydata/nginx/conf/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-删除临时nginx容器" tabindex="-1"><a class="header-anchor" href="#_4-删除临时nginx容器" aria-hidden="true">#</a> 4. 删除临时nginx容器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 停止运行 nginx 容器</span>
<span class="token function">docker</span> stop nginx

<span class="token comment"># 删除 nginx 容器</span>
<span class="token function">docker</span> <span class="token function">rm</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-启动-nginx-容器" tabindex="-1"><a class="header-anchor" href="#_5-启动-nginx-容器" aria-hidden="true">#</a> 5. 启动 nginx 容器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">--name</span> nginx <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /mydata/nginx/html:/usr/share/nginx/html <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /mydata/nginx/logs:/var/log/nginx <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /mydata/nginx/conf/:/etc/nginx <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> nginx:1.10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-设置-nginx-随-docker-启动" tabindex="-1"><a class="header-anchor" href="#_6-设置-nginx-随-docker-启动" aria-hidden="true">#</a> 6. 设置 nginx 随 Docker 启动</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> update nginx <span class="token parameter variable">--restart</span><span class="token operator">=</span>always
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_7-测试-nginx" tabindex="-1"><a class="header-anchor" href="#_7-测试-nginx" aria-hidden="true">#</a> 7. 测试 nginx</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;&lt;h1&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/zsy0216/guli-mall&quot;&gt;谷粒商城源码&lt;/a&gt;&lt;/h1&gt;&#39;</span> <span class="token punctuation">\\</span>
<span class="token operator">&gt;</span>/mydata/nginx/html/index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,20),p={href:"http://192.168.163.131/",target:"_blank",rel:"noopener noreferrer"},g=a("img",{src:"https://cdn.nlark.com/yuque/0/2021/png/12568777/1615427904611-9eb096c6-bbda-41a8-bc80-7a3b35429a83.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_RXDmtYHoi48%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=118&id=WfusQ&name=image.png&originHeight=236&originWidth=703&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17696&status=done&style=none&title=&width=351.5",alt:"image.png",loading:"lazy"},null,-1),u=i(`<h1 id="删除多余的-mydata-nginx-conf-nginx目录" tabindex="-1"><a class="header-anchor" href="#删除多余的-mydata-nginx-conf-nginx目录" aria-hidden="true">#</a> 删除多余的 /mydata/nginx/conf/nginx目录</h1><p>rm -rf /mydata/nginx/conf/nginx</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>## 4. 删除临时nginx容器
\`\`\`shell
# 停止运行 nginx 容器
docker stop nginx

# 删除 nginx 容器
docker rm nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-启动-nginx-容器-1" tabindex="-1"><a class="header-anchor" href="#_5-启动-nginx-容器-1" aria-hidden="true">#</a> 5. 启动 nginx 容器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">--name</span> nginx <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /mydata/nginx/html:/usr/share/nginx/html <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /mydata/nginx/logs:/var/log/nginx <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /mydata/nginx/conf/:/etc/nginx <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> nginx:1.10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-设置-nginx-随-docker-启动-1" tabindex="-1"><a class="header-anchor" href="#_6-设置-nginx-随-docker-启动-1" aria-hidden="true">#</a> 6. 设置 nginx 随 Docker 启动</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> update nginx <span class="token parameter variable">--restart</span><span class="token operator">=</span>always
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_7-测试-nginx-1" tabindex="-1"><a class="header-anchor" href="#_7-测试-nginx-1" aria-hidden="true">#</a> 7. 测试 nginx</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;&lt;h1&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/zsy0216/guli-mall&quot;&gt;谷粒商城源码&lt;/a&gt;&lt;/h1&gt;&#39;</span> <span class="token punctuation">\\</span>
<span class="token operator">&gt;</span>/mydata/nginx/html/index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,9),m={href:"http://192.168.163.131/",target:"_blank",rel:"noopener noreferrer"},h=a("img",{src:"https://cdn.nlark.com/yuque/0/2021/png/12568777/1615427904611-9eb096c6-bbda-41a8-bc80-7a3b35429a83.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_RXDmtYHoi48%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=118&id=WfusQ&name=image.png&originHeight=236&originWidth=703&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17696&status=done&style=none&title=&width=351.5",alt:"image.png",loading:"lazy"},null,-1);function v(b,x){const e=l("ExternalLinkIcon");return r(),d("div",null,[o,a("p",null,[n("打开："),a("a",p,[n("http://192.168.163.131/"),s(e)]),n(" 可以看到下面内容说明安装成功 "),g,n(" conf 目录 mv /mydata/nginx/conf/nginx/* /mydata/nginx/conf/")]),u,a("p",null,[n("打开："),a("a",m,[n("http://192.168.163.131/"),s(e)]),n(" 可以看到下面内容说明安装成功 "),h])])}const _=t(c,[["render",v],["__file","nginx-install-in-docker.html.vue"]]);export{_ as default};

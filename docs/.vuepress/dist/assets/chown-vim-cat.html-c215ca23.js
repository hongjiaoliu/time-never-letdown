import{_ as e,V as t,W as o,Z as a}from"./framework-e5211252.js";const n={},p=a('<h1 id="基本命令-chown-vim-cat" tabindex="-1"><a class="header-anchor" href="#基本命令-chown-vim-cat" aria-hidden="true">#</a> 基本命令 | chown/vim/cat</h1><h2 id="chown" tabindex="-1"><a class="header-anchor" href="#chown" aria-hidden="true">#</a> chown</h2><p>命令： chown（更改用户及用户组，全拼：change owner） chown [-cfhvR] [--help] [--version] user[:group] file... 参数： user : 新的文件拥有者的使用者 ID group : 新的文件拥有者的使用者组(group) -c : 显示更改的部分的信息 -f : 忽略错误信息 -h :修复符号链接 -v : 显示详细的处理信息 -R : 处理指定目录以及其子目录下的所有文件 --help : 显示辅助说明 --version : 显示版本</p><p>示例： chown mail:mail log2012.log chown -R -v root:mail test6 chown :mail log2012.log chown root: log2012.log chown root testshown 把 /home/wangning/testshown 的所有者设置 root chown root:root testshown1 将文件testshown1的拥有者设为 root，群体的使用者 root chown -R root:root * 将当前前目录下的所有文件与子目录的拥有者皆设为 root，群体的使用者 root chown :1001 /home/wangning/testshown 把 /home/wangning/testshown 的关联组设置为 1001 （关联组ID），不改变所有者</p><h2 id="vim" tabindex="-1"><a class="header-anchor" href="#vim" aria-hidden="true">#</a> vim</h2><h3 id="常用基本操作" tabindex="-1"><a class="header-anchor" href="#常用基本操作" aria-hidden="true">#</a> 常用基本操作</h3><p>i: 在当前光标所在字符的前面，转为输入模式；</p><p>a: 在当前光标所在字符的后面，转为输入模式；</p><p>o: 在当前光标所在行的下方，新建一行，并转为输入模式；</p><p>I：在当前光标所在行的行首，转换为输入模式</p><p>A：在当前光标所在行的行尾，转换为输入模式</p><p>O：在当前光标所在行的上方，新建一行，并转为输入模式；</p><h3 id="esc模式下" tabindex="-1"><a class="header-anchor" href="#esc模式下" aria-hidden="true">#</a> ESC模式下</h3><p>yy ：复制 （yy前面可加数字，例如:2yy复制两行，）</p><p>p: 粘贴</p><p>dd:删除(同yy)</p><p>ctrl + v:列选中（列选中模式下，复制是y,删除是d）</p><p>shift +v 行选中 （操作同上）</p><p>g:回到文件最上面</p><p>G：到大文件最后</p><p>shift + ^ :行开始</p><p>shift + $ :行尾部</p><p>批量操作：</p><p>选中模式下shift + i/a/o 输入内容，按ESC即可</p><h2 id="cat" tabindex="-1"><a class="header-anchor" href="#cat" aria-hidden="true">#</a> cat</h2><p>英文：concatenate）命令用于连接文件并打印到标准输出设备上。</p><p>语法格式：cat [-AbeEnstTuv] [--help] [--version] fileName；</p><p>参数说明：</p><p>-n 或 --number：由 1 开始对所有输出的行数编号。</p><p>-b 或 --number-nonblank：和 -n 相似，只不过对于空白行不编号。</p><p>-s 或 --squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行。</p><p>-v 或 --show-nonprinting：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外。</p><p>-E 或 --show-ends : 在每行结束处显示 $。</p><p>-T 或 --show-tabs: 将 TAB 字符显示为 ^I。</p><p>-A, --show-all：等价于 -vET。</p><p>-e：等价于&quot;-vE&quot;选项；</p><p>-t：等价于&quot;-vT&quot;选项</p><p>实例：</p><p>cat -n textfile1 &gt; textfile2</p><p>cat -b textfile1 textfile2 &gt;&gt; textfile3</p><p>cat /dev/null &gt; /etc/test.txt //清空文件内容</p><p>cat IMG_FILE &gt; /dev/fd0 //把image_file写到软盘</p>',42),h=[p];function c(i,r){return t(),o("div",null,h)}const d=e(n,[["render",c],["__file","chown-vim-cat.html.vue"]]);export{d as default};

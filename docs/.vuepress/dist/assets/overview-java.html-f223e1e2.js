const E=JSON.parse('{"key":"v-759b096e","path":"/core-java/base/overview-java.html","title":"Java基础 | 速览","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2022-05-18T00:00:00.000Z","category":["Server"],"tag":["Java","Core-java"],"description":"Java基础 | 速览 Java基础 | 速览 1. 面向对象和面向过程的区别 面向过程 面向对象 2. Java 语言有哪些特点 3. 关于 JVM JDK 和 JRE 最详细通俗的解答 JVM JDK 和 JRE 4. Oracle JDK 和 OpenJDK 的对比 5. Java和C++的区别 6. 什么是 Java 程序的主类 应用程序和小程序的主类有何不同 7. Java 应用程序与小程序之间有那些差别 8. 字符型常量和字符串常量的区别 9. 构造器 Constructor 是否可被 override 10. 重载和重写的区别 11. Java 面向对象编程三大特性: 封装 继承 多态 封装 继承 多态 12. String StringBuffer 和 StringBuilder 的区别是什么 String 为什么是不可变的 13. 自动装箱与拆箱 14. 在一个静态方法内调用一个非静态成员为什么是非法的 15. 在 Java 中定义一个不做事且没有参数的构造方法的作用 16. import java和javax有什么区别 17. 接口和抽象类的区别是什么 18. 成员变量与局部变量的区别有那些 19. 创建一个对象用什么运算符?对象实体与对象引用有何不同? 20. 什么是方法的返回值?返回值在类的方法里的作用是什么? 21. 一个类的构造方法的作用是什么 若一个类没有声明构造方法,该程序能正确执行吗 ?为什么? 22. 构造方法有哪些特性 23. 静态方法和实例方法有何不同 24. 对象的相等与指向他们的引用相等,两者有什么不同? 25. 在调用子类构造方法之前会先调用父类没有参数的构造方法,其目的是? 26. == 与 equals(重要) 27. hashCode 与 equals (重要) hashCode（）介绍 为什么要有 hashCode hashCode（）与equals（）的相关规定 28. 为什么Java中只有值传递 29. 简述线程,程序,进程的基本概念.以及他们之间关系是什么? 30. 线程有哪些基本状态? 31 关于 final 关键字的一些总结 32 Java 中的异常处理 Java异常类层次结构图 Throwable类常用方法 异常处理总结 33 Java序列化中如果有些字段不想进行序列化 怎么办 34 获取用键盘输入常用的的两种方法","head":[["meta",{"property":"og:url","content":"https://liuhongjiao.cn/./core-java/base/overview-java.html"}],["meta",{"property":"og:site_name","content":"L - 时光不负"}],["meta",{"property":"og:title","content":"Java基础 | 速览"}],["meta",{"property":"og:description","content":"Java基础 | 速览 Java基础 | 速览 1. 面向对象和面向过程的区别 面向过程 面向对象 2. Java 语言有哪些特点 3. 关于 JVM JDK 和 JRE 最详细通俗的解答 JVM JDK 和 JRE 4. Oracle JDK 和 OpenJDK 的对比 5. Java和C++的区别 6. 什么是 Java 程序的主类 应用程序和小程序的主类有何不同 7. Java 应用程序与小程序之间有那些差别 8. 字符型常量和字符串常量的区别 9. 构造器 Constructor 是否可被 override 10. 重载和重写的区别 11. Java 面向对象编程三大特性: 封装 继承 多态 封装 继承 多态 12. String StringBuffer 和 StringBuilder 的区别是什么 String 为什么是不可变的 13. 自动装箱与拆箱 14. 在一个静态方法内调用一个非静态成员为什么是非法的 15. 在 Java 中定义一个不做事且没有参数的构造方法的作用 16. import java和javax有什么区别 17. 接口和抽象类的区别是什么 18. 成员变量与局部变量的区别有那些 19. 创建一个对象用什么运算符?对象实体与对象引用有何不同? 20. 什么是方法的返回值?返回值在类的方法里的作用是什么? 21. 一个类的构造方法的作用是什么 若一个类没有声明构造方法,该程序能正确执行吗 ?为什么? 22. 构造方法有哪些特性 23. 静态方法和实例方法有何不同 24. 对象的相等与指向他们的引用相等,两者有什么不同? 25. 在调用子类构造方法之前会先调用父类没有参数的构造方法,其目的是? 26. == 与 equals(重要) 27. hashCode 与 equals (重要) hashCode（）介绍 为什么要有 hashCode hashCode（）与equals（）的相关规定 28. 为什么Java中只有值传递 29. 简述线程,程序,进程的基本概念.以及他们之间关系是什么? 30. 线程有哪些基本状态? 31 关于 final 关键字的一些总结 32 Java 中的异常处理 Java异常类层次结构图 Throwable类常用方法 异常处理总结 33 Java序列化中如果有些字段不想进行序列化 怎么办 34 获取用键盘输入常用的的两种方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-03T11:17:04.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Core-java"}],["meta",{"property":"article:published_time","content":"2022-05-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-03T11:17:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java基础 | 速览\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-03T11:17:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 面向对象和面向过程的区别","slug":"_1-面向对象和面向过程的区别","link":"#_1-面向对象和面向过程的区别","children":[{"level":3,"title":"面向过程","slug":"面向过程","link":"#面向过程","children":[]},{"level":3,"title":"面向对象","slug":"面向对象","link":"#面向对象","children":[]}]},{"level":2,"title":"2. Java 语言有哪些特点","slug":"_2-java-语言有哪些特点","link":"#_2-java-语言有哪些特点","children":[]},{"level":2,"title":"3. 关于 JVM JDK 和 JRE 最详细通俗的解答","slug":"_3-关于-jvm-jdk-和-jre-最详细通俗的解答","link":"#_3-关于-jvm-jdk-和-jre-最详细通俗的解答","children":[{"level":3,"title":"JVM","slug":"jvm","link":"#jvm","children":[]},{"level":3,"title":"JDK 和 JRE","slug":"jdk-和-jre","link":"#jdk-和-jre","children":[]}]},{"level":2,"title":"4. Oracle JDK 和 OpenJDK 的对比","slug":"_4-oracle-jdk-和-openjdk-的对比","link":"#_4-oracle-jdk-和-openjdk-的对比","children":[]},{"level":2,"title":"5. Java和C++的区别","slug":"_5-java和c-的区别","link":"#_5-java和c-的区别","children":[]},{"level":2,"title":"6. 什么是 Java 程序的主类 应用程序和小程序的主类有何不同","slug":"_6-什么是-java-程序的主类-应用程序和小程序的主类有何不同","link":"#_6-什么是-java-程序的主类-应用程序和小程序的主类有何不同","children":[]},{"level":2,"title":"7. Java 应用程序与小程序之间有那些差别","slug":"_7-java-应用程序与小程序之间有那些差别","link":"#_7-java-应用程序与小程序之间有那些差别","children":[]},{"level":2,"title":"8. 字符型常量和字符串常量的区别","slug":"_8-字符型常量和字符串常量的区别","link":"#_8-字符型常量和字符串常量的区别","children":[]},{"level":2,"title":"9. 构造器 Constructor 是否可被 override","slug":"_9-构造器-constructor-是否可被-override","link":"#_9-构造器-constructor-是否可被-override","children":[]},{"level":2,"title":"10. 重载和重写的区别","slug":"_10-重载和重写的区别","link":"#_10-重载和重写的区别","children":[]},{"level":2,"title":"11. Java 面向对象编程三大特性: 封装 继承 多态","slug":"_11-java-面向对象编程三大特性-封装-继承-多态","link":"#_11-java-面向对象编程三大特性-封装-继承-多态","children":[{"level":3,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":3,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":3,"title":"多态","slug":"多态","link":"#多态","children":[]}]},{"level":2,"title":"12. String StringBuffer 和 StringBuilder 的区别是什么 String 为什么是不可变的","slug":"_12-string-stringbuffer-和-stringbuilder-的区别是什么-string-为什么是不可变的","link":"#_12-string-stringbuffer-和-stringbuilder-的区别是什么-string-为什么是不可变的","children":[]},{"level":2,"title":"13. 自动装箱与拆箱","slug":"_13-自动装箱与拆箱","link":"#_13-自动装箱与拆箱","children":[]},{"level":2,"title":"14. 在一个静态方法内调用一个非静态成员为什么是非法的","slug":"_14-在一个静态方法内调用一个非静态成员为什么是非法的","link":"#_14-在一个静态方法内调用一个非静态成员为什么是非法的","children":[]},{"level":2,"title":"15. 在 Java 中定义一个不做事且没有参数的构造方法的作用","slug":"_15-在-java-中定义一个不做事且没有参数的构造方法的作用","link":"#_15-在-java-中定义一个不做事且没有参数的构造方法的作用","children":[]},{"level":2,"title":"16. import java和javax有什么区别","slug":"_16-import-java和javax有什么区别","link":"#_16-import-java和javax有什么区别","children":[]},{"level":2,"title":"17. 接口和抽象类的区别是什么","slug":"_17-接口和抽象类的区别是什么","link":"#_17-接口和抽象类的区别是什么","children":[]},{"level":2,"title":"18. 成员变量与局部变量的区别有那些","slug":"_18-成员变量与局部变量的区别有那些","link":"#_18-成员变量与局部变量的区别有那些","children":[]},{"level":2,"title":"19. 创建一个对象用什么运算符?对象实体与对象引用有何不同?","slug":"_19-创建一个对象用什么运算符-对象实体与对象引用有何不同","link":"#_19-创建一个对象用什么运算符-对象实体与对象引用有何不同","children":[]},{"level":2,"title":"20. 什么是方法的返回值?返回值在类的方法里的作用是什么?","slug":"_20-什么是方法的返回值-返回值在类的方法里的作用是什么","link":"#_20-什么是方法的返回值-返回值在类的方法里的作用是什么","children":[]},{"level":2,"title":"21. 一个类的构造方法的作用是什么 若一个类没有声明构造方法,该程序能正确执行吗 ?为什么?","slug":"_21-一个类的构造方法的作用是什么-若一个类没有声明构造方法-该程序能正确执行吗-为什么","link":"#_21-一个类的构造方法的作用是什么-若一个类没有声明构造方法-该程序能正确执行吗-为什么","children":[]},{"level":2,"title":"22. 构造方法有哪些特性","slug":"_22-构造方法有哪些特性","link":"#_22-构造方法有哪些特性","children":[]},{"level":2,"title":"23. 静态方法和实例方法有何不同","slug":"_23-静态方法和实例方法有何不同","link":"#_23-静态方法和实例方法有何不同","children":[]},{"level":2,"title":"24. 对象的相等与指向他们的引用相等,两者有什么不同?","slug":"_24-对象的相等与指向他们的引用相等-两者有什么不同","link":"#_24-对象的相等与指向他们的引用相等-两者有什么不同","children":[]},{"level":2,"title":"25. 在调用子类构造方法之前会先调用父类没有参数的构造方法,其目的是?","slug":"_25-在调用子类构造方法之前会先调用父类没有参数的构造方法-其目的是","link":"#_25-在调用子类构造方法之前会先调用父类没有参数的构造方法-其目的是","children":[]},{"level":2,"title":"26. == 与 equals(重要)","slug":"_26-与-equals-重要","link":"#_26-与-equals-重要","children":[]},{"level":2,"title":"27. hashCode 与 equals (重要)","slug":"_27-hashcode-与-equals-重要","link":"#_27-hashcode-与-equals-重要","children":[{"level":3,"title":"hashCode（）介绍","slug":"hashcode-介绍","link":"#hashcode-介绍","children":[]},{"level":3,"title":"为什么要有 hashCode","slug":"为什么要有-hashcode","link":"#为什么要有-hashcode","children":[]},{"level":3,"title":"hashCode（）与equals（）的相关规定","slug":"hashcode-与equals-的相关规定","link":"#hashcode-与equals-的相关规定","children":[]}]},{"level":2,"title":"28. 为什么Java中只有值传递","slug":"_28-为什么java中只有值传递","link":"#_28-为什么java中只有值传递","children":[]},{"level":2,"title":"29. 简述线程,程序,进程的基本概念.以及他们之间关系是什么?","slug":"_29-简述线程-程序-进程的基本概念-以及他们之间关系是什么","link":"#_29-简述线程-程序-进程的基本概念-以及他们之间关系是什么","children":[]},{"level":2,"title":"30. 线程有哪些基本状态?","slug":"_30-线程有哪些基本状态","link":"#_30-线程有哪些基本状态","children":[]},{"level":2,"title":"31 关于 final 关键字的一些总结","slug":"_31-关于-final-关键字的一些总结","link":"#_31-关于-final-关键字的一些总结","children":[]},{"level":2,"title":"32 Java 中的异常处理","slug":"_32-java-中的异常处理","link":"#_32-java-中的异常处理","children":[{"level":3,"title":"Java异常类层次结构图","slug":"java异常类层次结构图","link":"#java异常类层次结构图","children":[]},{"level":3,"title":"Throwable类常用方法","slug":"throwable类常用方法","link":"#throwable类常用方法","children":[]},{"level":3,"title":"异常处理总结","slug":"异常处理总结","link":"#异常处理总结","children":[]}]},{"level":2,"title":"33 Java序列化中如果有些字段不想进行序列化 怎么办","slug":"_33-java序列化中如果有些字段不想进行序列化-怎么办","link":"#_33-java序列化中如果有些字段不想进行序列化-怎么办","children":[]},{"level":2,"title":"34 获取用键盘输入常用的的两种方法","slug":"_34-获取用键盘输入常用的的两种方法","link":"#_34-获取用键盘输入常用的的两种方法","children":[]}],"git":{"createdTime":1675239868000,"updatedTime":1675423024000,"contributors":[{"name":"liuhongjiao","email":"liuhongjiao@koolearn.com","commits":4}]},"readingTime":{"minutes":33,"words":9899},"filePathRelative":"core-java/base/overview-java.md","localizedDate":"2022年5月18日","excerpt":"<h1> Java基础 | 速览</h1>\\n<ul>\\n<li><a href=\\"#java%E5%9F%BA%E7%A1%80--%E9%80%9F%E8%A7%88\\">Java基础 | 速览</a>\\n<ul>\\n<li><a href=\\"#1-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB\\">1. 面向对象和面向过程的区别</a>\\n<ul>\\n<li><a href=\\"#%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B\\">面向过程</a></li>\\n<li><a href=\\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1\\">面向对象</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#2-java-%E8%AF%AD%E8%A8%80%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E7%82%B9\\">2. Java 语言有哪些特点</a></li>\\n<li><a href=\\"#3-%E5%85%B3%E4%BA%8E-jvm-jdk-%E5%92%8C-jre-%E6%9C%80%E8%AF%A6%E7%BB%86%E9%80%9A%E4%BF%97%E7%9A%84%E8%A7%A3%E7%AD%94\\">3. 关于 JVM JDK 和 JRE 最详细通俗的解答</a>\\n<ul>\\n<li><a href=\\"#jvm\\">JVM</a></li>\\n<li><a href=\\"#jdk-%E5%92%8C-jre\\">JDK 和 JRE</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#4-oracle-jdk-%E5%92%8C-openjdk-%E7%9A%84%E5%AF%B9%E6%AF%94\\">4. Oracle JDK 和 OpenJDK 的对比</a></li>\\n<li><a href=\\"#5-java%E5%92%8Cc%E7%9A%84%E5%8C%BA%E5%88%AB\\">5. Java和C++的区别</a></li>\\n<li><a href=\\"#6-%E4%BB%80%E4%B9%88%E6%98%AF-java-%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B8%BB%E7%B1%BB-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%92%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B8%BB%E7%B1%BB%E6%9C%89%E4%BD%95%E4%B8%8D%E5%90%8C\\">6. 什么是 Java 程序的主类 应用程序和小程序的主类有何不同</a></li>\\n<li><a href=\\"#7-java-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B9%8B%E9%97%B4%E6%9C%89%E9%82%A3%E4%BA%9B%E5%B7%AE%E5%88%AB\\">7. Java 应用程序与小程序之间有那些差别</a></li>\\n<li><a href=\\"#8-%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%B8%B8%E9%87%8F%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E7%9A%84%E5%8C%BA%E5%88%AB\\">8. 字符型常量和字符串常量的区别</a></li>\\n<li><a href=\\"#9-%E6%9E%84%E9%80%A0%E5%99%A8-constructor-%E6%98%AF%E5%90%A6%E5%8F%AF%E8%A2%AB-override\\">9. 构造器 Constructor 是否可被 override</a></li>\\n<li><a href=\\"#10-%E9%87%8D%E8%BD%BD%E5%92%8C%E9%87%8D%E5%86%99%E7%9A%84%E5%8C%BA%E5%88%AB\\">10. 重载和重写的区别</a></li>\\n<li><a href=\\"#11-java-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7-%E5%B0%81%E8%A3%85-%E7%BB%A7%E6%89%BF-%E5%A4%9A%E6%80%81\\">11. Java 面向对象编程三大特性: 封装 继承 多态</a>\\n<ul>\\n<li><a href=\\"#%E5%B0%81%E8%A3%85\\">封装</a></li>\\n<li><a href=\\"#%E7%BB%A7%E6%89%BF\\">继承</a></li>\\n<li><a href=\\"#%E5%A4%9A%E6%80%81\\">多态</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#12-string-stringbuffer-%E5%92%8C-stringbuilder-%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88-string-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84\\">12. String StringBuffer 和 StringBuilder 的区别是什么 String 为什么是不可变的</a></li>\\n<li><a href=\\"#13-%E8%87%AA%E5%8A%A8%E8%A3%85%E7%AE%B1%E4%B8%8E%E6%8B%86%E7%AE%B1\\">13. 自动装箱与拆箱</a></li>\\n<li><a href=\\"#14-%E5%9C%A8%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E5%86%85%E8%B0%83%E7%94%A8%E4%B8%80%E4%B8%AA%E9%9D%9E%E9%9D%99%E6%80%81%E6%88%90%E5%91%98%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%9E%E6%B3%95%E7%9A%84\\">14. 在一个静态方法内调用一个非静态成员为什么是非法的</a></li>\\n<li><a href=\\"#15-%E5%9C%A8-java-%E4%B8%AD%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%81%9A%E4%BA%8B%E4%B8%94%E6%B2%A1%E6%9C%89%E5%8F%82%E6%95%B0%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%9C%E7%94%A8\\">15. 在 Java 中定义一个不做事且没有参数的构造方法的作用</a></li>\\n<li><a href=\\"#16-import-java%E5%92%8Cjavax%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB\\">16. import java和javax有什么区别</a></li>\\n<li><a href=\\"#17-%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88\\">17. 接口和抽象类的区别是什么</a></li>\\n<li><a href=\\"#18-%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E7%9A%84%E5%8C%BA%E5%88%AB%E6%9C%89%E9%82%A3%E4%BA%9B\\">18. 成员变量与局部变量的区别有那些</a></li>\\n<li><a href=\\"#19-%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%94%A8%E4%BB%80%E4%B9%88%E8%BF%90%E7%AE%97%E7%AC%A6%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BD%93%E4%B8%8E%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8%E6%9C%89%E4%BD%95%E4%B8%8D%E5%90%8C\\">19. 创建一个对象用什么运算符?对象实体与对象引用有何不同?</a></li>\\n<li><a href=\\"#20-%E4%BB%80%E4%B9%88%E6%98%AF%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%E8%BF%94%E5%9B%9E%E5%80%BC%E5%9C%A8%E7%B1%BB%E7%9A%84%E6%96%B9%E6%B3%95%E9%87%8C%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88\\">20. 什么是方法的返回值?返回值在类的方法里的作用是什么?</a></li>\\n<li><a href=\\"#21-%E4%B8%80%E4%B8%AA%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88-%E8%8B%A5%E4%B8%80%E4%B8%AA%E7%B1%BB%E6%B2%A1%E6%9C%89%E5%A3%B0%E6%98%8E%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E8%AF%A5%E7%A8%8B%E5%BA%8F%E8%83%BD%E6%AD%A3%E7%A1%AE%E6%89%A7%E8%A1%8C%E5%90%97-%E4%B8%BA%E4%BB%80%E4%B9%88\\">21. 一个类的构造方法的作用是什么 若一个类没有声明构造方法,该程序能正确执行吗 ?为什么?</a></li>\\n<li><a href=\\"#22-%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E6%80%A7\\">22. 构造方法有哪些特性</a></li>\\n<li><a href=\\"#23-%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E5%92%8C%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95%E6%9C%89%E4%BD%95%E4%B8%8D%E5%90%8C\\">23. 静态方法和实例方法有何不同</a></li>\\n<li><a href=\\"#24-%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%9B%B8%E7%AD%89%E4%B8%8E%E6%8C%87%E5%90%91%E4%BB%96%E4%BB%AC%E7%9A%84%E5%BC%95%E7%94%A8%E7%9B%B8%E7%AD%89%E4%B8%A4%E8%80%85%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C\\">24. 对象的相等与指向他们的引用相等,两者有什么不同?</a></li>\\n<li><a href=\\"#25-%E5%9C%A8%E8%B0%83%E7%94%A8%E5%AD%90%E7%B1%BB%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E4%B9%8B%E5%89%8D%E4%BC%9A%E5%85%88%E8%B0%83%E7%94%A8%E7%88%B6%E7%B1%BB%E6%B2%A1%E6%9C%89%E5%8F%82%E6%95%B0%E7%9A%84%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95%E5%85%B6%E7%9B%AE%E7%9A%84%E6%98%AF\\">25. 在调用子类构造方法之前会先调用父类没有参数的构造方法,其目的是?</a></li>\\n<li><a href=\\"#26--%E4%B8%8E-equals%E9%87%8D%E8%A6%81\\">26. == 与 equals(重要)</a></li>\\n<li><a href=\\"#27-hashcode-%E4%B8%8E-equals-%E9%87%8D%E8%A6%81\\">27. hashCode 与 equals (重要)</a>\\n<ul>\\n<li><a href=\\"#hashcode%E4%BB%8B%E7%BB%8D\\">hashCode（）介绍</a></li>\\n<li><a href=\\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%9C%89-hashcode\\">为什么要有 hashCode</a></li>\\n<li><a href=\\"#hashcode%E4%B8%8Eequals%E7%9A%84%E7%9B%B8%E5%85%B3%E8%A7%84%E5%AE%9A\\">hashCode（）与equals（）的相关规定</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#28-%E4%B8%BA%E4%BB%80%E4%B9%88java%E4%B8%AD%E5%8F%AA%E6%9C%89%E5%80%BC%E4%BC%A0%E9%80%92\\">28. 为什么Java中只有值传递</a></li>\\n<li><a href=\\"#29-%E7%AE%80%E8%BF%B0%E7%BA%BF%E7%A8%8B%E7%A8%8B%E5%BA%8F%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%BB%A5%E5%8F%8A%E4%BB%96%E4%BB%AC%E4%B9%8B%E9%97%B4%E5%85%B3%E7%B3%BB%E6%98%AF%E4%BB%80%E4%B9%88\\">29. 简述线程,程序,进程的基本概念.以及他们之间关系是什么?</a></li>\\n<li><a href=\\"#30-%E7%BA%BF%E7%A8%8B%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%8A%B6%E6%80%81\\">30. 线程有哪些基本状态?</a></li>\\n<li><a href=\\"#31-%E5%85%B3%E4%BA%8E-final-%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93\\">31 关于 final 关键字的一些总结</a></li>\\n<li><a href=\\"#32-java-%E4%B8%AD%E7%9A%84%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86\\">32 Java 中的异常处理</a>\\n<ul>\\n<li><a href=\\"#java%E5%BC%82%E5%B8%B8%E7%B1%BB%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84%E5%9B%BE\\">Java异常类层次结构图</a></li>\\n<li><a href=\\"#throwable%E7%B1%BB%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95\\">Throwable类常用方法</a></li>\\n<li><a href=\\"#%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93\\">异常处理总结</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#33-java%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%AD%E5%A6%82%E6%9E%9C%E6%9C%89%E4%BA%9B%E5%AD%97%E6%AE%B5%E4%B8%8D%E6%83%B3%E8%BF%9B%E8%A1%8C%E5%BA%8F%E5%88%97%E5%8C%96-%E6%80%8E%E4%B9%88%E5%8A%9E\\">33 Java序列化中如果有些字段不想进行序列化 怎么办</a></li>\\n<li><a href=\\"#34-%E8%8E%B7%E5%8F%96%E7%94%A8%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%E5%B8%B8%E7%94%A8%E7%9A%84%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95\\">34 获取用键盘输入常用的的两种方法</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{E as data};

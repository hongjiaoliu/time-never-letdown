import{_ as i,V as l,W as c,X as n,Y as s,$ as e,Z as t,F as o}from"./framework-e5211252.js";const p={},r=n("h1",{id:"_5-分词",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-分词","aria-hidden":"true"},"#"),s(" 5-分词")],-1),d=n("h1",{id:"简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),s(" 简介")],-1),u={href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.x/analysis.html",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>一个tokenizer（分词器）接收一个字符流，将之分割为独立的tokens（词元，通常是独立的单词），然后输出tokens流。 例如：whitespace tokenizer遇到空白字符时分割文本。它会将文本“Quick brown fox!”分割为[Quick,brown,fox!]。 该tokenizer（分词器）还负责记录各个terms(词条)的顺序或position位置（用于phrase短语和word proximity词近邻查询），以及term（词条）所代表的原始word（单词）的start（起始）和end（结束）的character offsets（字符串偏移量）（用于高亮显示搜索的内容）。 elasticsearch提供了很多内置的分词器，可以用来构建custom analyzers（自定义分词器）。</p><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code>POST _analyze
{
  <span class="token string">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;standard&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;The 2 QUICK Brown-Foxes jumped over the lazy dog&#39;s bone.&quot;</span>
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认的分词器一般都是针对于英文，对于中文我们需要安装额外的分词器来进行分词。</p><h1 id="安装ik分词器" tabindex="-1"><a class="header-anchor" href="#安装ik分词器" aria-hidden="true">#</a> 安装IK分词器</h1><h2 id="_1-下载" tabindex="-1"><a class="header-anchor" href="#_1-下载" aria-hidden="true">#</a> 1. 下载</h2>`,5),v=n("p",null,"事前准备：",-1),k=n("li",null,[s("IK 分词器属于 Elasticsearch 的插件，所以 IK 分词器的安装目录是 Elasticsearch 的 plugins 目录，在我们使用Docker启动 Elasticsearch 时，已经将该目录挂载到主机的 "),n("code",null,"/mydata/elasticsearch/plugins"),s(" 目录。")],-1),h=n("code",null,"7.4.2",-1),b={href:"https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v7.4.2",target:"_blank",rel:"noopener noreferrer"},g={href:"https://hub.fastgit.org/medcl/elasticsearch-analysis-ik/releases/tag/v7.4.2",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入挂载的插件目录 /mydata/elasticsearch/plugins</span>
<span class="token builtin class-name">cd</span> /mydata/elasticsearch/plugins

<span class="token comment"># 安装 wget 下载工具</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span>

<span class="token comment"># 下载对应版本的 IK 分词器（这里是7.4.2）</span>
<span class="token function">wget</span> https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.4.2/elasticsearch-analysis-ik-7.4.2.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里已经在挂载的 plugins 目录安装好了 IK分词器。现在我们进入到 es 容器内部检查是否成功安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入容器内部</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> elasticsearch /bin/bash

<span class="token comment"># 查看 es 插件目录</span>
<span class="token function">ls</span> /usr/share/elasticsearch/plugins

<span class="token comment"># 可以看到 elasticsearch-analysis-ik-7.4.2.zip</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以我们之后只需要在挂载的目录<code>/mydata/elasticsearch/plugins</code>下进行操作即可。</p><h2 id="_2-解压" tabindex="-1"><a class="header-anchor" href="#_2-解压" aria-hidden="true">#</a> 2. 解压</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入到 es 的插件目录</span>
<span class="token builtin class-name">cd</span> /mydata/elasticsearch/plugins

<span class="token comment"># 解压到 plugins 目录下的 ik 目录</span>
<span class="token function">unzip</span> elasticsearch-analysis-ik-7.4.2.zip <span class="token parameter variable">-d</span> ik

<span class="token comment"># 删除下载的压缩包</span>
 <span class="token function">rm</span> <span class="token parameter variable">-f</span> elasticsearch-analysis-ik-7.4.2.zip 

<span class="token comment"># 修改文件夹访问权限</span>
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> ik/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-查看安装的ik插件" tabindex="-1"><a class="header-anchor" href="#_3-查看安装的ik插件" aria-hidden="true">#</a> 3. 查看安装的ik插件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入 es 容器内部</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> elasticsearch /bin/bash

<span class="token comment"># 进入 es bin 目录</span>
<span class="token builtin class-name">cd</span> /usr/share/elasticsearch/bin

<span class="token comment"># 执行查看命令  显示 ik</span>
elasticsearch-plugin list

<span class="token comment"># 退出容器</span>
<span class="token builtin class-name">exit</span>

<span class="token comment"># 重启 Elasticsearch</span>
<span class="token function">docker</span> restart elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启遇到错误：</p><blockquote><p>Error response from daemon: driver failed programming external connectivity on endpoint elasticsearch (0cf6a38895d321cc793f1f26ebef2335b902328116db2cd01a50601090ff2d07):  (iptables failed: iptables --wait -t nat -A DOCKER -p tcp -d 0/0 --dport 9300 -j DNAT --to-destination 172.17.0.6:9300 ! -i docker0: iptables: No chain/target/match by that name.</p></blockquote><p>解决：重启docker <code>systemctl restart docker</code></p><h2 id="_4-测试-ik-分词器" tabindex="-1"><a class="header-anchor" href="#_4-测试-ik-分词器" aria-hidden="true">#</a> 4. 测试 ik 分词器</h2><p><strong>GET my_index/_analyze</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GET my_index/_analyze
<span class="token punctuation">{</span>
   <span class="token string">&quot;analyzer&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;ik_max_word&quot;</span>, 
   <span class="token string">&quot;text&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;蔡徐坤&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.liuhongjiao.cn/images/2023/02/16/5-analysis-es/1676510013917.png" alt="图 1" tabindex="0" loading="lazy"><figcaption>图 1</figcaption></figure><blockquote><p>这里对于默认词库中没有的词，不会有词语的组合，所以我们可以通过配置自定义词库或远程词库来实现对词库的扩展。</p></blockquote><h1 id="自定义扩展分词库" tabindex="-1"><a class="header-anchor" href="#自定义扩展分词库" aria-hidden="true">#</a> 自定义扩展分词库</h1>`,17),x={href:"https://www.yuque.com/maohou/wkdvge/oukz88",target:"_blank",rel:"noopener noreferrer"},f=t(`<h2 id="_1-nginx-中自定义分词文件" tabindex="-1"><a class="header-anchor" href="#_1-nginx-中自定义分词文件" aria-hidden="true">#</a> 1. nginx 中自定义分词文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;蔡徐坤&quot;</span> <span class="token operator">&gt;</span> /mydata/nginx/html/fenci.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>nginx 默认请求地址为 <code>ip:port/fenci.txt</code>；本机为：<code>192.168.163.131/fenci.txt</code> 如果想要增加新的词语，只需要在该文件追加新的行并保存新的词语即可。</p><h2 id="_2-给-es-配置自定义词库" tabindex="-1"><a class="header-anchor" href="#_2-给-es-配置自定义词库" aria-hidden="true">#</a> 2. 给 es 配置自定义词库</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 打开并编辑 ik 插件配置文件</span>
<span class="token function">vim</span> /mydata/elasticsearch/plugins/ik/config/IKAnalyzer.cfg.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改为以下内容：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">properties</span> <span class="token name">SYSTEM</span> <span class="token string">&quot;http://java.sun.com/dtd/properties.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>comment</span><span class="token punctuation">&gt;</span></span>IK Analyzer 扩展配置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>comment</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ext_dict<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ext_stopwords<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span>
  <span class="token comment">&lt;!-- &lt;entry key=&quot;remote_ext_dict&quot;&gt;words_location&lt;/entry&gt; --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>remote_ext_dict<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>http://192.168.163.131/fenci.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span>
  <span class="token comment">&lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-重启-elasticsearch-容器" tabindex="-1"><a class="header-anchor" href="#_3-重启-elasticsearch-容器" aria-hidden="true">#</a> 3. 重启 elasticsearch 容器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-测试自定义词库" tabindex="-1"><a class="header-anchor" href="#_4-测试自定义词库" aria-hidden="true">#</a> 4. 测试自定义词库</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>GET my_index/_analyze
<span class="token punctuation">{</span>
  <span class="token property">&quot;analyzer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> 
  <span class="token property">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;蔡徐坤&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果： <img src="https://cdn.liuhongjiao.cn/images/2023/02/16/5-analysis-es/1676510037075.png" alt="图 2" loading="lazy"></p>`,12);function y(q,w){const a=o("ExternalLinkIcon");return l(),c("div",null,[r,d,n("blockquote",null,[n("p",null,[n("a",u,[s("https://www.elastic.co/guide/en/elasticsearch/reference/7.x/analysis.html"),e(a)])])]),m,n("blockquote",null,[v,n("ul",null,[k,n("li",null,[s("IK 分词器的版本需要跟 Elasticsearch 的版本对应，当前选择的版本为 "),h,s("，下载地址为："),n("a",b,[s("Github Release"),e(a)]),s(" 或访问："),n("a",g,[s("镜像地址"),e(a)])])])]),_,n("blockquote",null,[n("p",null,[s("我们在 nginx 中自定义分词文件，通过配置 es 的 ik 配置文件来远程调用 nginx 中的分词文件来实现自定义扩展词库。 注：默认 nginx 请求的是 数据目录的 html 静态目录 nginx 安装参考："),n("a",x,[s("docker 安装 nginx"),e(a)])])]),f])}const E=i(p,[["render",y],["__file","5-analysis-es.html.vue"]]);export{E as default};

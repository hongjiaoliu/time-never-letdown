const e=JSON.parse('{"key":"v-3fe172aa","path":"/study/general/linux/commands/xargs.html","title":"基本 | xargs","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2023-09-18T00:00:00.000Z","category":["通用技能"],"tag":["Linux","Linux命令"],"star":true,"description":"基本 | xargs 1. xargs 命令简介 xargs 命令用于将输入数据转换为命令行参数。它能够处理管道或stdin并将其转换为特定命令的命令行参数。 xargs命令的基本语法如下: xargs [options] [command]","head":[["meta",{"property":"og:url","content":"https://liuhongjiao.cn/study/general/linux/commands/xargs.html"}],["meta",{"property":"og:site_name","content":"L - 时光不负"}],["meta",{"property":"og:title","content":"基本 | xargs"}],["meta",{"property":"og:description","content":"基本 | xargs 1. xargs 命令简介 xargs 命令用于将输入数据转换为命令行参数。它能够处理管道或stdin并将其转换为特定命令的命令行参数。 xargs命令的基本语法如下: xargs [options] [command]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"Linux命令"}],["meta",{"property":"article:published_time","content":"2023-09-18T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本 | xargs\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-18T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. xargs 命令简介","slug":"_1-xargs-命令简介","link":"#_1-xargs-命令简介","children":[]},{"level":2,"title":"2. xargs命令用法","slug":"_2-xargs命令用法","link":"#_2-xargs命令用法","children":[{"level":3,"title":"2.1 将find命令结果作为xargs参数","slug":"_2-1-将find命令结果作为xargs参数","link":"#_2-1-将find命令结果作为xargs参数","children":[]},{"level":3,"title":"2.2 将stdin作为参数","slug":"_2-2-将stdin作为参数","link":"#_2-2-将stdin作为参数","children":[]},{"level":3,"title":"2.3 -I 选项:替换参数","slug":"_2-3-i-选项-替换参数","link":"#_2-3-i-选项-替换参数","children":[]},{"level":3,"title":"2.4 -n 选项:指定一次处理的参数个数","slug":"_2-4-n-选项-指定一次处理的参数个数","link":"#_2-4-n-选项-指定一次处理的参数个数","children":[]},{"level":3,"title":"2.5 -P 选项:并行执行","slug":"_2-5-p-选项-并行执行","link":"#_2-5-p-选项-并行执行","children":[]},{"level":3,"title":"2.6 -0 选项:使用null分隔参数","slug":"_2-6-0-选项-使用null分隔参数","link":"#_2-6-0-选项-使用null分隔参数","children":[]}]},{"level":2,"title":"3. xargs命令高级用法","slug":"_3-xargs命令高级用法","link":"#_3-xargs命令高级用法","children":[{"level":3,"title":"3.1 指定定界符","slug":"_3-1-指定定界符","link":"#_3-1-指定定界符","children":[]},{"level":3,"title":"3.2 控制每次执行的参数个数","slug":"_3-2-控制每次执行的参数个数","link":"#_3-2-控制每次执行的参数个数","children":[]},{"level":3,"title":"3.3 重复执行命令","slug":"_3-3-重复执行命令","link":"#_3-3-重复执行命令","children":[]},{"level":3,"title":"3.4 用xargs将命令结果拼接成一行输出","slug":"_3-4-用xargs将命令结果拼接成一行输出","link":"#_3-4-用xargs将命令结果拼接成一行输出","children":[]},{"level":3,"title":"3.5 用xargs排除某些文件","slug":"_3-5-用xargs排除某些文件","link":"#_3-5-用xargs排除某些文件","children":[]},{"level":3,"title":"3.6 用xargs处理 输入包含空格的文件","slug":"_3-6-用xargs处理-输入包含空格的文件","link":"#_3-6-用xargs处理-输入包含空格的文件","children":[]},{"level":3,"title":"3.7 限制xargs命令的最大进程数","slug":"_3-7-限制xargs命令的最大进程数","link":"#_3-7-限制xargs命令的最大进程数","children":[]}]},{"level":2,"title":"4. xargs命令的错误处理","slug":"_4-xargs命令的错误处理","link":"#_4-xargs命令的错误处理","children":[{"level":3,"title":"4.1 检查每个命令是否执行成功","slug":"_4-1-检查每个命令是否执行成功","link":"#_4-1-检查每个命令是否执行成功","children":[]},{"level":3,"title":"4.2 在命令前面加echo","slug":"_4-2-在命令前面加echo","link":"#_4-2-在命令前面加echo","children":[]},{"level":3,"title":"4.3 测试命令行长度","slug":"_4-3-测试命令行长度","link":"#_4-3-测试命令行长度","children":[]},{"level":3,"title":"4.4 设置最大命令行长度","slug":"_4-4-设置最大命令行长度","link":"#_4-4-设置最大命令行长度","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.96,"words":1187},"filePathRelative":"study/general/linux/commands/xargs.md","localizedDate":"2023年9月18日","excerpt":"<h1> 基本 | xargs</h1>\\n<h2> 1. xargs 命令简介</h2>\\n<p><code>xargs</code> 命令用于将输入数据转换为命令行参数。它能够处理管道或stdin并将其转换为特定命令的命令行参数。\\nxargs命令的基本语法如下:</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">xargs</span> <span class=\\"token punctuation\\">[</span>options<span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">[</span>command<span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
